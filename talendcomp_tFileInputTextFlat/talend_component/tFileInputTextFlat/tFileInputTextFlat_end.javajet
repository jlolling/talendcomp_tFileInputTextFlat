<%@ jet 
	imports="
		org.talend.core.model.process.INode 
		org.talend.core.model.process.ElementParameterParser 
		org.talend.designer.codegen.config.CodeGeneratorArgument
	" 
%>

<% 
    CodeGeneratorArgument codeGenArgument = (CodeGeneratorArgument) argument;
    INode node = (INode)codeGenArgument.getArgument();
    String cid = node.getUniqueName();
	boolean loadConfigFromFile = "true".equals(ElementParameterParser.getValue(node, "__LOAD_CONFIG_FROM_FILE__"));
	boolean saveConfigToFile = "true".equals(ElementParameterParser.getValue(node, "__SAVE_CONFIG_TO_FILE__"));
	String configFileToSave = ElementParameterParser.getValue(node, "__CONFIG_FILE_BACKUP__");
	boolean allowFieldsNotFound = "true".equals(ElementParameterParser.getValue(node, "__ALLOW_FIELDS_NOT_FOUND_IN_CURRENT_FILE__"));
%>
		} // end of while of <%=cid%>
	} finally { // finally from try of <%=cid%>
		<%=cid%>.close(); // close file handle
	}
	globalMap.put("<%=cid%>_NB_LINE", countLinesDelivered_<%=cid%>); 
	globalMap.put("<%=cid%>_NB_REJECTED", countRejects_<%=cid%>); 
<%  if (loadConfigFromFile == false && saveConfigToFile) { %>
	try {
		<%=cid%>.saveConfigToFile(<%=configFileToSave%>, <%=allowFieldsNotFound%>);
	} catch (Exception e) {
		globalMap.put("<%=cid%>_ERROR_MESSAGE", e.getMessage());
		throw e;	
	} 
<%  } %>	
	